sql {
	Expression = ExpressionSelect | ExpressionUnion
	ExpressionSelect =
		("with" identifier "as" Expression)?
		"select" "distinct"? NonemptyListOf<ExpressionSelectField, ",">
		("from" NonemptyListOf<ExpressionSelectTable, ",">)?
		("where" Expression)?
		("order" "by" Expression ("asc" | "desc")?)?
		("limit" Expression)?
		("offset" Expression)?
	ExpressionSelectField =
		Expression identifier?	-- expression
		| (identifier ".")? "*"	-- star
	ExpressionSelectTable = Expression identifier?
	ExpressionUnion =
		ExpressionUnion "union" "all"? ExpressionOr	-- union
		| ExpressionOr
	ExpressionOr =
		ExpressionOr "||" ExpressionAnd	-- or
		| ExpressionAnd
	ExpressionAnd =
		ExpressionAnd "&&" ExpressionNot	-- and
		| ExpressionNot
	ExpressionNot =
		"!" ExpressionNot	-- not
		| ExpressionRelation
	ExpressionRelation =
		ExpressionRelation ("<="|"="|">="|"<"|"!="|">"|"in") ExpressionAdd	-- relation
		| ExpressionAdd
	ExpressionAdd =
		ExpressionAdd ("+"|"-") ExpressionMultiply	-- add
		| ExpressionMultiply
	ExpressionMultiply =
		ExpressionMultiply ("*"|"/") ExpressionAddUnary	-- multiply
		| ExpressionAddUnary
	ExpressionAddUnary =
		("+"|"-") ExpressionAddUnary	-- add
		| ExpressionCall
	ExpressionCall =
		ExpressionAtom "(" ListOf<Expression, ","> ")"	-- call
		| ExpressionAtom
	ExpressionAtom =
		"(" Expression ")"	-- parentheses
		| "%" identifier "%"	-- placeholder
		| ExpressionName
		| ExpressionNumber
		| ExpressionString
	ExpressionName = (identifier ".")? identifier
	ExpressionNumber = number
	ExpressionString = string<"\"">
	identifier = ~(("select"|"distinct"|"from"|"where"|"order"|"limit"|"offset") ~(alnum|"_")) &(letter|"_") (alnum|"_")+
	number = digit+ ("." digit+)?
	string<quote> = quote char<quote>* quote
	char<quote> = ~(quote|"\\") any	-- literal
		| "\\" (quote | "\\" | "b" | "f" | "n" | "r" | "t" | "v")	-- escaped
}